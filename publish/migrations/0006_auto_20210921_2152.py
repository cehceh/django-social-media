# Generated by Django 3.1.5 on 2021-09-21 19:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import publish.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('publish', '0005_auto_20210912_1305'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='comment',
            options={'ordering': ['-DatePublished']},
        ),
        migrations.AlterModelOptions(
            name='postfiles',
            options={'ordering': ['-DatePublished']},
        ),
        migrations.RenameField(
            model_name='comment',
            old_name='snippet',
            new_name='repo',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='record',
        ),
        migrations.RemoveField(
            model_name='post',
            name='share',
        ),
        migrations.AddField(
            model_name='comment',
            name='shared',
            field=models.ManyToManyField(blank=True, related_name='publish_shared_comment', related_query_name='publish_shared_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='post',
            field=publish.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Post', to='publish.post'),
        ),
        migrations.AddField(
            model_name='postfiles',
            name='DatePublished',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='postfiles',
            name='angry',
            field=models.ManyToManyField(blank=True, related_name='publish_angry_postfiles', related_query_name='publish_angry_postfiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postfiles',
            name='author',
            field=publish.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Post_Files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postfiles',
            name='haha',
            field=models.ManyToManyField(blank=True, related_name='publish_haha_postfiles', related_query_name='publish_haha_postfiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postfiles',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='publish_likes_postfiles', related_query_name='publish_likes_postfiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postfiles',
            name='love',
            field=models.ManyToManyField(blank=True, related_name='publish_love_postfiles', related_query_name='publish_love_postfiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postfiles',
            name='sad',
            field=models.ManyToManyField(blank=True, related_name='publish_sad_postfiles', related_query_name='publish_sad_postfiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postfiles',
            name='shared',
            field=models.ManyToManyField(blank=True, related_name='publish_shared_postfiles', related_query_name='publish_shared_postfiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postfiles',
            name='wow',
            field=models.ManyToManyField(blank=True, related_name='publish_wow_postfiles', related_query_name='publish_wow_postfiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='angry',
            field=models.ManyToManyField(blank=True, related_name='publish_angry_comment', related_query_name='publish_angry_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='author',
            field=publish.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='haha',
            field=models.ManyToManyField(blank=True, related_name='publish_haha_comment', related_query_name='publish_haha_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='publish_likes_comment', related_query_name='publish_likes_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='love',
            field=models.ManyToManyField(blank=True, related_name='publish_love_comment', related_query_name='publish_love_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='post',
            field=publish.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Comment', to='publish.post'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='sad',
            field=models.ManyToManyField(blank=True, related_name='publish_sad_comment', related_query_name='publish_sad_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='wow',
            field=models.ManyToManyField(blank=True, related_name='publish_wow_comment', related_query_name='publish_wow_comment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='angry',
            field=models.ManyToManyField(blank=True, related_name='publish_angry_post', related_query_name='publish_angry_post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='author',
            field=publish.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='haha',
            field=models.ManyToManyField(blank=True, related_name='publish_haha_post', related_query_name='publish_haha_post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='publish_likes_post', related_query_name='publish_likes_post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='love',
            field=models.ManyToManyField(blank=True, related_name='publish_love_post', related_query_name='publish_love_post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='sad',
            field=models.ManyToManyField(blank=True, related_name='publish_sad_post', related_query_name='publish_sad_post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='shared',
            field=models.ManyToManyField(blank=True, related_name='publish_shared_post', related_query_name='publish_shared_post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='wow',
            field=models.ManyToManyField(blank=True, related_name='publish_wow_post', related_query_name='publish_wow_post', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='postfiles',
            name='post',
            field=publish.models.CustomFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Post_Files', to='publish.post'),
        ),
    ]
